envoy:
  enabled: true
  service:
    type: "LoadBalancer"

scalardbCluster:

  image:
    repository: "ghcr.io/scalar-labs/scalardb-cluster-node"

  scalardbClusterNodeProperties: |
    # ScalarDB Cluster configurations
    scalar.db.cluster.membership.type=KUBERNETES
    scalar.db.cluster.membership.kubernetes.endpoint.namespace_name=${env:SCALAR_DB_CLUSTER_MEMBERSHIP_KUBERNETES_ENDPOINT_NAMESPACE_NAME}
    scalar.db.cluster.membership.kubernetes.endpoint.name=${env:SCALAR_DB_CLUSTER_MEMBERSHIP_KUBERNETES_ENDPOINT_NAME}

    # Storage configurations
    scalar.db.storage=jdbc
    scalar.db.contact_points=jdbc:postgresql://postgresql-scalardb-cluster.default.svc.cluster.local:5432/postgres
    scalar.db.username=${env:SCALAR_DB_CLUSTER_POSTGRES_USERNAME}
    scalar.db.password=${env:SCALAR_DB_CLUSTER_POSTGRES_PASSWORD}

    # For ScalarDB Cluster GraphQL
    scalar.db.graphql.enabled=false

    # For ScalarDB Cluster SQL
    scalar.db.sql.enabled=false
  graphql:
    enabled: false
    service:
      type: "LoadBalancer"

  imagePullSecrets: [{"name": "scalardb-ghcr-secret"}]
  secretName: "scalardb-credentials-secret"
